{% comment %}
  Analytics Tracking Implementation
  Includes: Google Analytics 4, Facebook Pixel, and custom event tracking
  
  Usage: Include in theme.liquid before closing </head> tag
  {% render 'analytics-tracking' %}
{% endcomment %}

{% comment %} Google Analytics 4 Implementation {% endcomment %}
{% if settings.ga4_measurement_id != blank %}
  <!-- Google Analytics 4 -->
  <script async src="https://www.googletagmanager.com/gtag/js?id={{ settings.ga4_measurement_id }}"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', '{{ settings.ga4_measurement_id }}', {
      'currency': '{{ shop.currency }}',
      'send_page_view': false
    });
    
    // Enhanced E-commerce Data Layer
    window.perkieAnalytics = {
      currency: '{{ shop.currency }}',
      customer: {
        {% if customer %}
          id: '{{ customer.id }}',
          email: '{{ customer.email | sha256 }}',
          first_name: '{{ customer.first_name }}',
          tags: {{ customer.tags | json }},
          total_spent: {{ customer.total_spent | divided_by: 100.0 }},
          orders_count: {{ customer.orders_count }}
        {% else %}
          id: null,
          guest: true
        {% endif %}
      }
    };
  </script>
{% endif %}

{% comment %} Facebook Pixel Implementation {% endcomment %}
{% if settings.facebook_pixel_id != blank %}
  <!-- Facebook Pixel Code -->
  <script>
    !function(f,b,e,v,n,t,s)
    {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
    n.callMethod.apply(n,arguments):n.queue.push(arguments)};
    if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
    n.queue=[];t=b.createElement(e);t.async=!0;
    t.src=v;s=b.getElementsByTagName(e)[0];
    s.parentNode.insertBefore(t,s)}(window, document,'script',
    'https://connect.facebook.net/en_US/fbevents.js');
    
    fbq('init', '{{ settings.facebook_pixel_id }}');
    fbq('track', 'PageView');
    
    {% if customer %}
      fbq('setUserProperties', '{{ settings.facebook_pixel_id }}', {
        '$value': {{ customer.total_spent | divided_by: 100.0 }},
        'customer_orders': {{ customer.orders_count }}
      });
    {% endif %}
  </script>
  <noscript>
    <img height="1" width="1" style="display:none"
    src="https://www.facebook.com/tr?id={{ settings.facebook_pixel_id }}&ev=PageView&noscript=1"/>
  </noscript>
{% endif %}

{% comment %} Custom Event Tracking System {% endcomment %}
<script>
  // Perkie Analytics Helper Functions
  window.PerkieAnalytics = {
    // Track custom events to both GA4 and FB Pixel
    trackEvent: function(eventName, parameters) {
      parameters = parameters || {};
      
      // Add common parameters
      parameters.currency = parameters.currency || '{{ shop.currency }}';
      parameters.value = parameters.value || 0;
      
      // Send to Google Analytics 4
      if (typeof gtag !== 'undefined') {
        gtag('event', eventName, parameters);
      }
      
      // Send to Facebook Pixel
      if (typeof fbq !== 'undefined') {
        // Map custom events to Facebook standard events where possible
        const fbEventMap = {
          'add_to_cart': 'AddToCart',
          'begin_checkout': 'InitiateCheckout',
          'purchase': 'Purchase',
          'view_item': 'ViewContent',
          'search': 'Search',
          'add_payment_info': 'AddPaymentInfo',
          'lead': 'Lead',
          'complete_registration': 'CompleteRegistration'
        };
        
        const fbEventName = fbEventMap[eventName] || 'CustomEvent';
        fbq('track', fbEventName, parameters);
      }
      
      // Log to console in development
      if (window.location.hostname === 'localhost' || window.location.search.includes('debug=true')) {
        console.log('PerkieAnalytics Event:', eventName, parameters);
      }
    },
    
    // Track pet customization events
    trackPetEvent: function(action, details) {
      this.trackEvent('pet_customization', {
        action: action,
        ...details
      });
    },
    
    // Track product views with enhanced data
    trackProductView: function(product) {
      this.trackEvent('view_item', {
        currency: '{{ shop.currency }}',
        value: product.price / 100,
        items: [{
          item_id: product.id,
          item_name: product.title,
          item_category: product.type,
          item_variant: product.variant,
          price: product.price / 100,
          quantity: 1
        }]
      });
    },
    
    // Track add to cart with pet data
    trackAddToCart: function(product, petData) {
      const parameters = {
        currency: '{{ shop.currency }}',
        value: product.price / 100,
        items: [{
          item_id: product.id,
          item_name: product.title,
          item_category: product.type,
          item_variant: product.variant,
          price: product.price / 100,
          quantity: product.quantity || 1
        }]
      };
      
      // Add pet customization data
      if (petData) {
        parameters.custom_parameters = {
          has_pet_image: !!petData.imageUrl,
          pet_effect: petData.selectedEffect,
          pet_count: petData.pets ? petData.pets.length : 0
        };
      }
      
      this.trackEvent('add_to_cart', parameters);
    },
    
    // Track email captures with source
    trackEmailCapture: function(source, value) {
      this.trackEvent('lead', {
        source: source,
        value: value || 5 // Estimated email value
      });
    }
  };
  
  // Auto-track page views
  document.addEventListener('DOMContentLoaded', function() {
    // Track initial page view
    if (typeof gtag !== 'undefined') {
      gtag('event', 'page_view', {
        page_location: window.location.href,
        page_title: document.title,
        page_path: window.location.pathname
      });
    }
  });
</script>

{% comment %} Product Page Tracking {% endcomment %}
{% if template contains 'product' %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const productData = {
        id: '{{ product.id }}',
        title: '{{ product.title | escape }}',
        type: '{{ product.type | escape }}',
        vendor: '{{ product.vendor | escape }}',
        price: {{ product.price }},
        variant: '{{ product.selected_or_first_available_variant.id }}'
      };
      
      // Track product view
      PerkieAnalytics.trackProductView(productData);
      
      // Listen for variant changes
      subscribe(PUB_SUB_EVENTS.variantChange, function(variant) {
        productData.variant = variant.id;
        productData.price = variant.price;
        PerkieAnalytics.trackProductView(productData);
      });
    });
  </script>
{% endif %}

{% comment %} Cart & Checkout Tracking {% endcomment %}
{% if template contains 'cart' %}
  <script>
    // Track cart page view
    PerkieAnalytics.trackEvent('view_cart', {
      currency: '{{ shop.currency }}',
      value: {{ cart.total_price | divided_by: 100.0 }},
      items: [
        {% for item in cart.items %}
          {
            item_id: '{{ item.product_id }}',
            item_name: '{{ item.product.title | escape }}',
            item_variant: '{{ item.variant.title | escape }}',
            price: {{ item.price | divided_by: 100.0 }},
            quantity: {{ item.quantity }}
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ]
    });
  </script>
{% endif %}

{% comment %} Thank You Page Conversion Tracking {% endcomment %}
{% if template contains 'customers/order' %}
  <script>
    // Track purchase conversion
    PerkieAnalytics.trackEvent('purchase', {
      transaction_id: '{{ order.order_number }}',
      value: {{ order.total_price | divided_by: 100.0 }},
      tax: {{ order.tax_price | divided_by: 100.0 }},
      shipping: {{ order.shipping_price | divided_by: 100.0 }},
      currency: '{{ shop.currency }}',
      items: [
        {% for item in order.line_items %}
          {
            item_id: '{{ item.product_id }}',
            item_name: '{{ item.title | escape }}',
            price: {{ item.price | divided_by: 100.0 }},
            quantity: {{ item.quantity }}
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ]
    });
  </script>
{% endif %}