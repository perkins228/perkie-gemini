{% if shop.permanent_domain contains 'dawn-theme'  %}
  <style>
    #btn-demo-viewer {
      --bs-primary: #4337c9;
      position: fixed;
      top: 50%;
      left: 0;
      transform: translateY(-50%);
      z-index: 9;
      cursor: pointer;
      background-color: var(--bs-primary);
      background-image: linear-gradient(to right, rgba(255, 255, 255, .2), transparent);
      color: white;
      border: none;
      text-transform: uppercase;
      font-size: 14px;
      padding: 10px 4px;
      font-weight: 500;
      font-family: sans-serif;
      writing-mode: vertical-rl;
      text-orientation: upright;
      transition: all .2s ease-out;
    }
    #btn-demo-viewer:hover,
    #btn-demo-viewer:focus {
      padding-left: 8px;
      padding-right: 8px;
    }
    #ks-demo-drawer,
    .ks-demo-drawer {
      --bs-primary: #4337c9;
      --bs-primary-rgb: 67, 55, 201;
    }
    #ks-demo-drawer-list {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
    }
    .ks-demo-drawer-list-item {
      text-align: center;
      line-height: normal;
      
    }
    .ks-demo-drawer-list-item a {
      color: currentColor;
      text-decoration: none;
    }
    .ks-demo-drawer-list-item .img-wrapper {
      position: relative;
    }
    .ks-demo-drawer-list-item.active .img-wrapper::before {
      content: "";
      background-color: rgba(var(--bs-primary-rgb), .75);
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='%23fff' stroke='%23fff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolygon points='12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2'%3E%3C/polygon%3E%3C/svg%3E");
      background-size: 60%;
      background-repeat: no-repeat;
      background-position: center;
      width: 32px;
      height: 32px;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      z-index: 1;
    }
    .ks-demo-drawer-list-item img {
      margin: 0 0 1rem;
      display: block;
      transition: all .2s ease-out;
    }
    .ks-demo-drawer-list-item:not(.active) a:hover img {
      opacity: .85;
    }
    .ks-demo-drawer-list-item-title {
      font-size: 1rem;
      margin: 0;
    } 
    a:hover .ks-demo-drawer-list-item-title {
      color: var(--bs-primary);
    }
    .ks-demo-drawer-list-item.active .ks-demo-drawer-list-item-title {
      color: var(--bs-primary);
    }
    .ks-demo-drawer-list-item-month {
      font-size: .85rem;
      opacity: .7;
      margin: 0 0 4px;
    }
  </style>

  <script>
    window.addEventListener('DOMContentLoaded', async () => {
      try {
        const res = await fetch('https://www.kondasoft.com/cdn/shop/files/theme-demos.json?{{ "now" | date: "%d"}}')
        const data = await res.json()
        const wrapper = document.querySelector('#ks-demo-drawer-list')

        data.forEach(elem => {
          const item = document.createElement('div')
          item.classList.add('ks-demo-drawer-list-item')
          if (window.location.href.includes(elem.handle)) item.classList.add('active')
          item.setAttribute('role', 'listitem')

          const link = document.createElement('a')
          link.href = `https://${encodeURIComponent(elem.handle)}.myshopify.com`
          link.setAttribute('rel', 'noopener')

          const imgWrapper = document.createElement('div')
          imgWrapper.classList.add('img-wrapper')

          const img = document.createElement('img')
          img.src = `https://www.kondasoft.com/cdn/shop/files/${encodeURIComponent(elem.handle)}.jpg?crop=center&height=640`
          img.className = 'img-thumbnail img-fluid'
          img.alt = ''
          img.width = 480
          img.height = 640

          const title = document.createElement('h4')
          title.className = 'ks-demo-drawer-list-item-title'
          title.textContent = elem.name

          const month = document.createElement('p')
          month.className = 'ks-demo-drawer-list-item-month'
          month.textContent = elem.month

          imgWrapper.appendChild(img)
          link.appendChild(imgWrapper)
          link.appendChild(title)
          link.appendChild(month)
          item.appendChild(link)

          wrapper.appendChild(item)
        })
      } catch (err) {
        console.error('Failed to load demo data', err)
      }
    })
  </script>

  <button id="btn-demo-viewer">
    Demos
  </button>

  <style>
    #btn-demo-viewer {
      z-index: 2;
    }
    ks-demo-drawer.drawer {
      justify-content: flex-start;
    }
    ks-demo-drawer.drawer .drawer__inner {
      transform: translateX(-100%);
    }
    ks-demo-drawer.drawer.active .drawer__inner {
      transform: translate(0);
    }
    ks-demo-drawer.drawer .drawer__close {
      right: -10px;
    }
    ks-demo-drawer.drawer #ks-demo-drawer-list {
      gap: 1.5rem;
      overflow: auto;
      margin: 0 -1.5rem;
      padding: 0 1.5rem 2rem;
    }
    ks-demo-drawer.drawer #ks-demo-drawer-list::-webkit-scrollbar {
      width: 3px;
    }
    ks-demo-drawer.drawer #ks-demo-drawer-list::-webkit-scrollbar-thumb {
      background-color: rgba(var(--color-foreground), 0.7);
      border-radius: 100px;
    }
    ks-demo-drawer.drawer .ks-demo-drawer-list-item-title {
      font-size: 16px;
    } 
    ks-demo-drawer.drawer .ks-demo-drawer-list-item-month {
      font-size: 14px;
    }
    ks-demo-drawer.drawer .alert-primary {
      margin: -.5rem 0 2rem;
      background: rgba(var(--bs-primary-rgb), .05);
      border: 1px solid rgba(var(--bs-primary-rgb), .1);
      padding: .5rem 1rem;
      text-align: center;
    }
  </style>
  <script>
    window.addEventListener('DOMContentLoaded', () => {
      class KsDemoDrawer extends HTMLElement {
        constructor () {
          super()
        
          this.addEventListener('keyup', (evt) => evt.code === 'Escape' && this.close());
          this.querySelector('.drawer__overlay').addEventListener('click', this.close.bind(this))
          this.querySelector('.drawer__close').addEventListener('click', this.close.bind(this))
          this.setIconsAccessibility()
        }
      
        setIconsAccessibility() {
          document.querySelectorAll('#btn-demo-viewer').forEach(btn => {
            btn.addEventListener('click', (event) => {
              event.preventDefault()
              this.open(btn)
            })
            btn.addEventListener('keydown', (event) => {
              if (event.code.toUpperCase() === 'SPACE') {
                event.preventDefault()
                this.open(btn)
              }
            })
          })
        }
      
        open(triggeredBy) {
          if (triggeredBy) this.setActiveElement(triggeredBy)
      
          setTimeout(() => {
            this.classList.add('animate', 'active')
          })
      
          this.addEventListener(
            'transitionend',
            () => {
              const containerToTrapFocusOn = this.querySelector('.ks-demo-drawer');
              const focusElement = this.querySelector('.drawer__inner') || this.querySelector('.drawer__close');
              window.trapFocus(containerToTrapFocusOn, focusElement)
            },
            { once: true }
          );
      
          document.body.classList.add('overflow-hidden')
        }
      
        close() {
          this.classList.remove('active')
          window.removeTrapFocus(this.activeElement)
          document.body.classList.remove('overflow-hidden')
        }
      
        setActiveElement(element) {
          this.activeElement = element
        }
      }
      customElements.define('ks-demo-drawer', KsDemoDrawer)
    })
  </script>
  <ks-demo-drawer class="drawer ks-drawer">
    <div class="ks-demo-drawer">
      <div class="drawer__overlay"></div>
      <div
        class="drawer__inner color-scheme-1"
        role="dialog"
        aria-modal="true"
        aria-label="Demo viewer drawer"
        tabindex="-1">
        <div class="drawer__header">
          <h2 class="drawer__heading">
            Demo Switcher
          </h2>
          <button
            class="drawer__close"
            type="button"
            onclick="this.closest('ks-wishlist-drawer').close()"
            aria-label="{{ 'accessibility.close' | t }}">
            <span class="svg-wrapper">
              {{- 'icon-close.svg' | inline_asset_content -}}
            </span>
          </button>
        </div>
        <p class="alert alert-primary">
          NOTE: The password for all demos is "ks"
        </p>
        <div id="ks-demo-drawer-list" role="list">
        </div>
      </div>
    </div>
  </ks-demo-drawer>
{% endif %}